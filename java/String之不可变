#### String 为什么不可变
什么叫不可变：就是成员变量不变

我们看源码的成员变量这里
```
   private final char value[];
   private final int count;

   /** Cache the hash code for the string */
   private int hash; // Default to 0


```

这些是string类的一部分成员变量，可以看到string并不是拥有字符串其实是通过拥有字符数组value[]来实现字符串的，并且是被private并且final修饰的，也就是不可变了
对于下面的代码：

```
  String a ="123";
  a= "abc";

```
大家会有疑问这里字符串a不是变了么，答案当然是没有变，不要忘记，a只是一个引用，指向一个string变量，
一开始a是指向“123”这个字符串变量的，后面我们又给了一个赋值，a就指向了“abc”字符串变量，所以”123”本身是不变的，只是没有引用指向他了。


同理，我们见到String里面有很多方法比如replace方法```a.replace('a','b');```,a指向的字符串变量也是没有变的，通过源码我们可以知道他是通过创建一个新的String返回给a，所以a原来指向的字符串变量还是没变。



#### 那么String就是真的不可变么？

我们还是看一下源码里的成员变量

 ```
 private final char value[];

 ```


 虽然value被定义城final了，但是不要忘记value也只是一个引用而已，被定义成final只是说他不能被指向别的字符串数组了，但是对于char数组我们是可以改动的，但是value又被声明为private，我们在外面又拿不到这个引用就很尴尬了。
 这里提出一个方法：我们可以用java反射的方法拿到value的引用，通过这个引用去修改引用指向的字符数组从而达到改变字符串变量的目的。
